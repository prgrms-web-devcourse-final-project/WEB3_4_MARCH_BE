/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserKeywordResponse } from './UserKeywordResponse';
import {
    UserKeywordResponseFromJSON,
    UserKeywordResponseFromJSONTyped,
    UserKeywordResponseToJSON,
    UserKeywordResponseToJSONTyped,
} from './UserKeywordResponse';
import type { ImageResponseDto } from './ImageResponseDto';
import {
    ImageResponseDtoFromJSON,
    ImageResponseDtoFromJSONTyped,
    ImageResponseDtoToJSON,
    ImageResponseDtoToJSONTyped,
} from './ImageResponseDto';

/**
 * 
 * @export
 * @interface RecommendedUserDto
 */
export interface RecommendedUserDto {
    /**
     * 
     * @type {number}
     * @memberof RecommendedUserDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof RecommendedUserDto
     */
    nickname?: string;
    /**
     * 
     * @type {number}
     * @memberof RecommendedUserDto
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof RecommendedUserDto
     */
    longitude?: number;
    /**
     * 
     * @type {number}
     * @memberof RecommendedUserDto
     */
    age?: number;
    /**
     * 
     * @type {string}
     * @memberof RecommendedUserDto
     */
    introduction?: string;
    /**
     * 
     * @type {Array<UserKeywordResponse>}
     * @memberof RecommendedUserDto
     */
    keywords?: Array<UserKeywordResponse>;
    /**
     * 
     * @type {Array<ImageResponseDto>}
     * @memberof RecommendedUserDto
     */
    images?: Array<ImageResponseDto>;
}

/**
 * Check if a given object implements the RecommendedUserDto interface.
 */
export function instanceOfRecommendedUserDto(value: object): value is RecommendedUserDto {
    return true;
}

export function RecommendedUserDtoFromJSON(json: any): RecommendedUserDto {
    return RecommendedUserDtoFromJSONTyped(json, false);
}

export function RecommendedUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecommendedUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'age': json['age'] == null ? undefined : json['age'],
        'introduction': json['introduction'] == null ? undefined : json['introduction'],
        'keywords': json['keywords'] == null ? undefined : ((json['keywords'] as Array<any>).map(UserKeywordResponseFromJSON)),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageResponseDtoFromJSON)),
    };
}

export function RecommendedUserDtoToJSON(json: any): RecommendedUserDto {
    return RecommendedUserDtoToJSONTyped(json, false);
}

export function RecommendedUserDtoToJSONTyped(value?: RecommendedUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'nickname': value['nickname'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'age': value['age'],
        'introduction': value['introduction'],
        'keywords': value['keywords'] == null ? undefined : ((value['keywords'] as Array<any>).map(UserKeywordResponseToJSON)),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageResponseDtoToJSON)),
    };
}

