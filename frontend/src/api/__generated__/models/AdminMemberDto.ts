/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdminMemberDto
 */
export interface AdminMemberDto {
    /**
     * 
     * @type {number}
     * @memberof AdminMemberDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AdminMemberDto
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof AdminMemberDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof AdminMemberDto
     */
    role?: AdminMemberDtoRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof AdminMemberDto
     */
    status?: AdminMemberDtoStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof AdminMemberDto
     */
    isDeleted?: boolean;
}


/**
 * @export
 */
export const AdminMemberDtoRoleEnum = {
    RoleTempUser: 'ROLE_TEMP_USER',
    RoleUser: 'ROLE_USER',
    RoleAdmin: 'ROLE_ADMIN'
} as const;
export type AdminMemberDtoRoleEnum = typeof AdminMemberDtoRoleEnum[keyof typeof AdminMemberDtoRoleEnum];

/**
 * @export
 */
export const AdminMemberDtoStatusEnum = {
    Active: 'ACTIVE',
    Blocked: 'BLOCKED',
    Withdrawn: 'WITHDRAWN'
} as const;
export type AdminMemberDtoStatusEnum = typeof AdminMemberDtoStatusEnum[keyof typeof AdminMemberDtoStatusEnum];


/**
 * Check if a given object implements the AdminMemberDto interface.
 */
export function instanceOfAdminMemberDto(value: object): value is AdminMemberDto {
    return true;
}

export function AdminMemberDtoFromJSON(json: any): AdminMemberDto {
    return AdminMemberDtoFromJSONTyped(json, false);
}

export function AdminMemberDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminMemberDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'email': json['email'] == null ? undefined : json['email'],
        'role': json['role'] == null ? undefined : json['role'],
        'status': json['status'] == null ? undefined : json['status'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
    };
}

export function AdminMemberDtoToJSON(json: any): AdminMemberDto {
    return AdminMemberDtoToJSONTyped(json, false);
}

export function AdminMemberDtoToJSONTyped(value?: AdminMemberDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'nickname': value['nickname'],
        'email': value['email'],
        'role': value['role'],
        'status': value['status'],
        'isDeleted': value['isDeleted'],
    };
}

