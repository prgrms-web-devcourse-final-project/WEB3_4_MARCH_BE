/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatMessageResponse
 */
export interface ChatMessageResponse {
    /**
     * 
     * @type {number}
     * @memberof ChatMessageResponse
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ChatMessageResponse
     */
    chatroomId?: number;
    /**
     * 
     * @type {number}
     * @memberof ChatMessageResponse
     */
    senderId?: number;
    /**
     * 
     * @type {string}
     * @memberof ChatMessageResponse
     */
    chatContent?: string;
    /**
     * 
     * @type {Date}
     * @memberof ChatMessageResponse
     */
    sendTime?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof ChatMessageResponse
     */
    read?: boolean;
}

/**
 * Check if a given object implements the ChatMessageResponse interface.
 */
export function instanceOfChatMessageResponse(value: object): value is ChatMessageResponse {
    return true;
}

export function ChatMessageResponseFromJSON(json: any): ChatMessageResponse {
    return ChatMessageResponseFromJSONTyped(json, false);
}

export function ChatMessageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatMessageResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'chatroomId': json['chatroomId'] == null ? undefined : json['chatroomId'],
        'senderId': json['senderId'] == null ? undefined : json['senderId'],
        'chatContent': json['chatContent'] == null ? undefined : json['chatContent'],
        'sendTime': json['sendTime'] == null ? undefined : (new Date(json['sendTime'])),
        'read': json['read'] == null ? undefined : json['read'],
    };
}

export function ChatMessageResponseToJSON(json: any): ChatMessageResponse {
    return ChatMessageResponseToJSONTyped(json, false);
}

export function ChatMessageResponseToJSONTyped(value?: ChatMessageResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'chatroomId': value['chatroomId'],
        'senderId': value['senderId'],
        'chatContent': value['chatContent'],
        'sendTime': value['sendTime'] == null ? undefined : ((value['sendTime']).toISOString()),
        'read': value['read'],
    };
}

