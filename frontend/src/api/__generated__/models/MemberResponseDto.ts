/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserKeywordResponse } from './UserKeywordResponse';
import {
    UserKeywordResponseFromJSON,
    UserKeywordResponseFromJSONTyped,
    UserKeywordResponseToJSON,
    UserKeywordResponseToJSONTyped,
} from './UserKeywordResponse';
import type { ImageResponseDto } from './ImageResponseDto';
import {
    ImageResponseDtoFromJSON,
    ImageResponseDtoFromJSONTyped,
    ImageResponseDtoToJSON,
    ImageResponseDtoToJSONTyped,
} from './ImageResponseDto';

/**
 * 
 * @export
 * @interface MemberResponseDto
 */
export interface MemberResponseDto {
    /**
     * 
     * @type {number}
     * @memberof MemberResponseDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MemberResponseDto
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberResponseDto
     */
    gender?: string;
    /**
     * 
     * @type {number}
     * @memberof MemberResponseDto
     */
    age?: number;
    /**
     * 
     * @type {number}
     * @memberof MemberResponseDto
     */
    height?: number;
    /**
     * 
     * @type {ImageResponseDto}
     * @memberof MemberResponseDto
     */
    profileImage?: ImageResponseDto;
    /**
     * 
     * @type {Array<ImageResponseDto>}
     * @memberof MemberResponseDto
     */
    images?: Array<ImageResponseDto>;
    /**
     * 
     * @type {string}
     * @memberof MemberResponseDto
     */
    introduction?: string;
    /**
     * 
     * @type {Array<UserKeywordResponse>}
     * @memberof MemberResponseDto
     */
    keywords?: Array<UserKeywordResponse>;
    /**
     * 
     * @type {boolean}
     * @memberof MemberResponseDto
     */
    liked?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MemberResponseDto
     */
    chatRequestStatus?: MemberResponseDtoChatRequestStatusEnum;
    /**
     * 
     * @type {boolean}
     * @memberof MemberResponseDto
     */
    blockStatus?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MemberResponseDto
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof MemberResponseDto
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof MemberResponseDto
     */
    longitude?: number;
}


/**
 * @export
 */
export const MemberResponseDtoChatRequestStatusEnum = {
    Pending: 'PENDING',
    Accepted: 'ACCEPTED',
    Rejected: 'REJECTED'
} as const;
export type MemberResponseDtoChatRequestStatusEnum = typeof MemberResponseDtoChatRequestStatusEnum[keyof typeof MemberResponseDtoChatRequestStatusEnum];


/**
 * Check if a given object implements the MemberResponseDto interface.
 */
export function instanceOfMemberResponseDto(value: object): value is MemberResponseDto {
    return true;
}

export function MemberResponseDtoFromJSON(json: any): MemberResponseDto {
    return MemberResponseDtoFromJSONTyped(json, false);
}

export function MemberResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'age': json['age'] == null ? undefined : json['age'],
        'height': json['height'] == null ? undefined : json['height'],
        'profileImage': json['profileImage'] == null ? undefined : ImageResponseDtoFromJSON(json['profileImage']),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageResponseDtoFromJSON)),
        'introduction': json['introduction'] == null ? undefined : json['introduction'],
        'keywords': json['keywords'] == null ? undefined : ((json['keywords'] as Array<any>).map(UserKeywordResponseFromJSON)),
        'liked': json['liked'] == null ? undefined : json['liked'],
        'chatRequestStatus': json['chatRequestStatus'] == null ? undefined : json['chatRequestStatus'],
        'blockStatus': json['blockStatus'] == null ? undefined : json['blockStatus'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
    };
}

export function MemberResponseDtoToJSON(json: any): MemberResponseDto {
    return MemberResponseDtoToJSONTyped(json, false);
}

export function MemberResponseDtoToJSONTyped(value?: MemberResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'nickname': value['nickname'],
        'gender': value['gender'],
        'age': value['age'],
        'height': value['height'],
        'profileImage': ImageResponseDtoToJSON(value['profileImage']),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageResponseDtoToJSON)),
        'introduction': value['introduction'],
        'keywords': value['keywords'] == null ? undefined : ((value['keywords'] as Array<any>).map(UserKeywordResponseToJSON)),
        'liked': value['liked'],
        'chatRequestStatus': value['chatRequestStatus'],
        'blockStatus': value['blockStatus'],
        'isDeleted': value['isDeleted'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
    };
}

