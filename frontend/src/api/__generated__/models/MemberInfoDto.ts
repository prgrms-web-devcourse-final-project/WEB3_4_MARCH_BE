/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageResponseDto } from './ImageResponseDto';
import {
    ImageResponseDtoFromJSON,
    ImageResponseDtoFromJSONTyped,
    ImageResponseDtoToJSON,
    ImageResponseDtoToJSONTyped,
} from './ImageResponseDto';

/**
 * 
 * @export
 * @interface MemberInfoDto
 */
export interface MemberInfoDto {
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    kakaoId?: number;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    nickname?: string;
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    age?: number;
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    height?: number;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    gender?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MemberInfoDto
     */
    chatAble?: boolean;
    /**
     * 
     * @type {Array<ImageResponseDto>}
     * @memberof MemberInfoDto
     */
    images?: Array<ImageResponseDto>;
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof MemberInfoDto
     */
    longitude?: number;
    /**
     * 
     * @type {string}
     * @memberof MemberInfoDto
     */
    role?: MemberInfoDtoRoleEnum;
}


/**
 * @export
 */
export const MemberInfoDtoRoleEnum = {
    RoleTempUser: 'ROLE_TEMP_USER',
    RoleUser: 'ROLE_USER'
} as const;
export type MemberInfoDtoRoleEnum = typeof MemberInfoDtoRoleEnum[keyof typeof MemberInfoDtoRoleEnum];


/**
 * Check if a given object implements the MemberInfoDto interface.
 */
export function instanceOfMemberInfoDto(value: object): value is MemberInfoDto {
    return true;
}

export function MemberInfoDtoFromJSON(json: any): MemberInfoDto {
    return MemberInfoDtoFromJSONTyped(json, false);
}

export function MemberInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberInfoDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'kakaoId': json['kakaoId'] == null ? undefined : json['kakaoId'],
        'email': json['email'] == null ? undefined : json['email'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'age': json['age'] == null ? undefined : json['age'],
        'height': json['height'] == null ? undefined : json['height'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'chatAble': json['chatAble'] == null ? undefined : json['chatAble'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageResponseDtoFromJSON)),
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function MemberInfoDtoToJSON(json: any): MemberInfoDto {
    return MemberInfoDtoToJSONTyped(json, false);
}

export function MemberInfoDtoToJSONTyped(value?: MemberInfoDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'kakaoId': value['kakaoId'],
        'email': value['email'],
        'nickname': value['nickname'],
        'age': value['age'],
        'height': value['height'],
        'gender': value['gender'],
        'chatAble': value['chatAble'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageResponseDtoToJSON)),
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'role': value['role'],
    };
}

