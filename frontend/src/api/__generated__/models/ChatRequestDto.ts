/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatRequestDto
 */
export interface ChatRequestDto {
    /**
     * 
     * @type {number}
     * @memberof ChatRequestDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ChatRequestDto
     */
    sendId?: number;
    /**
     * 
     * @type {number}
     * @memberof ChatRequestDto
     */
    receiverId?: number;
    /**
     * 
     * @type {string}
     * @memberof ChatRequestDto
     */
    status?: ChatRequestDtoStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof ChatRequestDto
     */
    requestedAt?: Date;
}


/**
 * @export
 */
export const ChatRequestDtoStatusEnum = {
    Pending: 'PENDING',
    Accepted: 'ACCEPTED',
    Rejected: 'REJECTED'
} as const;
export type ChatRequestDtoStatusEnum = typeof ChatRequestDtoStatusEnum[keyof typeof ChatRequestDtoStatusEnum];


/**
 * Check if a given object implements the ChatRequestDto interface.
 */
export function instanceOfChatRequestDto(value: object): value is ChatRequestDto {
    return true;
}

export function ChatRequestDtoFromJSON(json: any): ChatRequestDto {
    return ChatRequestDtoFromJSONTyped(json, false);
}

export function ChatRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'sendId': json['sendId'] == null ? undefined : json['sendId'],
        'receiverId': json['receiverId'] == null ? undefined : json['receiverId'],
        'status': json['status'] == null ? undefined : json['status'],
        'requestedAt': json['requestedAt'] == null ? undefined : (new Date(json['requestedAt'])),
    };
}

export function ChatRequestDtoToJSON(json: any): ChatRequestDto {
    return ChatRequestDtoToJSONTyped(json, false);
}

export function ChatRequestDtoToJSONTyped(value?: ChatRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'sendId': value['sendId'],
        'receiverId': value['receiverId'],
        'status': value['status'],
        'requestedAt': value['requestedAt'] == null ? undefined : ((value['requestedAt']).toISOString()),
    };
}

