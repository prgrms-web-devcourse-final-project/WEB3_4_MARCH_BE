/* tslint:disable */
/* eslint-disable */
/**
 * 4차 프로젝트 6팀 March API
 * 6팀 March의 백엔드 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BlockUserRequest,
  GenericResponseListBlockedUserResponse,
  GenericResponseVoid,
} from '../models/index';
import {
    BlockUserRequestFromJSON,
    BlockUserRequestToJSON,
    GenericResponseListBlockedUserResponseFromJSON,
    GenericResponseListBlockedUserResponseToJSON,
    GenericResponseVoidFromJSON,
    GenericResponseVoidToJSON,
} from '../models/index';

export interface BlockUserOperationRequest {
    blockUserRequest: BlockUserRequest;
}

export interface UnblockUserRequest {
    blockUserRequest: BlockUserRequest;
}

/**
 * 
 */
export class BlockUserControllerApi extends runtime.BaseAPI {

    /**
     */
    async blockUserRaw(requestParameters: BlockUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenericResponseVoid>> {
        if (requestParameters['blockUserRequest'] == null) {
            throw new runtime.RequiredError(
                'blockUserRequest',
                'Required parameter "blockUserRequest" was null or undefined when calling blockUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("kakaoOAuth", []);
        }

        const response = await this.request({
            path: `/api/block-user`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BlockUserRequestToJSON(requestParameters['blockUserRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenericResponseVoidFromJSON(jsonValue));
    }

    /**
     */
    async blockUser(requestParameters: BlockUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenericResponseVoid> {
        const response = await this.blockUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async blockedListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenericResponseListBlockedUserResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("kakaoOAuth", []);
        }

        const response = await this.request({
            path: `/api/block-user`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenericResponseListBlockedUserResponseFromJSON(jsonValue));
    }

    /**
     */
    async blockedList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenericResponseListBlockedUserResponse> {
        const response = await this.blockedListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async unblockUserRaw(requestParameters: UnblockUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenericResponseVoid>> {
        if (requestParameters['blockUserRequest'] == null) {
            throw new runtime.RequiredError(
                'blockUserRequest',
                'Required parameter "blockUserRequest" was null or undefined when calling unblockUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("kakaoOAuth", []);
        }

        const response = await this.request({
            path: `/api/unblock-user`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: BlockUserRequestToJSON(requestParameters['blockUserRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenericResponseVoidFromJSON(jsonValue));
    }

    /**
     */
    async unblockUser(requestParameters: UnblockUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenericResponseVoid> {
        const response = await this.unblockUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
